#!/bin/sh -e

KCP=true
CLIENT=false
SS_REMOTE=$SS_SERVER

KCP_EXEC="/opt/kcptun/server_linux_amd64 -t $KCP_TARGET:$SS_PORT -l :$KCP_PORT"
SSS_EXEC="/usr/local/bin/ss-server"

ARGS=`getopt -o c --long client,no-kcp,help -- "$@"` && eval set -- "$ARGS"

usage() {
	cat <<- EOF

		shadowsocks-kcp uses server mode with kcptun enabled by default

		Options:
		    -c|--client    start in client mode
		    --no-kcp       disable kcptun

	EOF
}

while true; do
	case "$1" in
		-c|--client)
			KCP_EXEC="/opt/kcptun/client_linux_amd64 -r $SS_SERVER:$KCP_PORT -l :$SS_PORT"
			SSS_EXEC="/usr/local/bin/ss-local -b 0.0.0.0 -l $SS_LOCAL_PORT"
			SS_SERVER=127.0.0.1; CLIENT=true; shift ;;
		--no-kcp) KCP=false; SS_SERVER=$SS_REMOTE; shift ;;
		--help) usage; exit 0 ;;
		--) shift; break ;;
		*) echo "Invalid arguments."; exit 1 ;;
    esac
done

KCP_EXEC=$KCP_EXEC" --crypt none --nocomp --mode $KCP_MODE --mtu $KCP_MTU --sndwnd $KCP_SNDWND --rcvwnd $KCP_RCVWND --datashard $KCP_DATASHARD --parityshard $KCP_PARITYSHARD"
SSS_EXEC=$SSS_EXEC" -s $SS_SERVER -p $SS_PORT -k $SS_PASSWORD -m $SS_METHOD -t $SS_TIMEOUT -u --fast-open"

$KCP && echo "Start:" $KCP_EXEC && $KCP_EXEC&
echo "Start:" $SSS_EXEC && $SSS_EXEC&

if [[ $PORT != 0 && $CLIENT == true ]]; then
	sed -i "/^\s*listen-address/c\listen-address 0.0.0.0:$PORT" /etc/privoxy/config
	echo forward-socks5 / 127.0.0.1:$SS_LOCAL_PORT . >> /etc/privoxy/config
	privoxy --no-daemon /etc/privoxy/config &
fi

trap "pkill -P $$; exit 0" TERM INT; wait
